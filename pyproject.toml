[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
# See https://www.python.org/dev/peps/pep-0621/
name = 'sirocco'
dynamic = ["version"]
description = 'A library for creating weather and climate workflows.'
authors = [
  {name = 'Matthieu Leclair', email = 'matthieu.leclair@env.ethz.ch'},
  {name = 'Julian Geiger', email = 'julian.geiger@psi.ch'},
  {name = 'Alexander Goscinski', email = 'alexander.goscinski@psi.ch'},
]
readme = 'README.md'
classifiers = [
  'Development Status :: 1 - Planning',
  'Intended Audience :: Science/Research',
  'Operating System :: POSIX :: Linux',
  'Programming Language :: Python',
  'Programming Language :: Python :: 3.12',
  'Topic :: Scientific/Engineering',
  'Topic :: Scientific/Engineering :: Atmospheric Science',
  'License :: OSI Approved :: MIT License',
]
keywords = ["workflow"," icon", "aiida", "aiida-workgraph"]
requires-python = '>=3.10'
dependencies = [
  "numpy",
  "isoduration",
  "pydantic",
  "ruamel.yaml",
  "aiida-core>=2.5",
  "aiida-workgraph==0.5.2",
  "termcolor",
  "pygraphviz",
  "lxml",
  "f90nml"
]
license = {file = "LICENSE"}

[project.urls]
Repository = "https://github.com/C2SM/Sirocco.git"
Documentation = "https://c2sm.github.io/Sirocco/"
Changelog = "https://github.com/C2SM/Sirocco/blob/main/CHANGELOG.md"

[tool.pytest.ini_options]
# Configuration for [pytest](https://docs.pytest.org)
addopts = "--pdbcls=IPython.terminal.debugger:TerminalPdb"
norecursedirs = "tests/cases"
markers = [
  "slow: slow integration tests which are not recommended to run locally for normal development",
  "requires_icon: marks test to require icon installation"
]
filterwarnings = [
  "error",
  "ignore::UserWarning",
  'ignore:datetime.datetime.utcfromtimestamp\(\) is deprecated:DeprecationWarning',  # from aio_pika via duration
  "ignore:There is no current event loop:DeprecationWarning",  # from plumpy via aiida testing tools
  "ignore:Object of type <DbNode> not in session:sqlalchemy.exc.SAWarning",  # sqlalchemy via aiida testing tools
]

[tool.coverage.run]
# Configuration of [coverage.py](https://coverage.readthedocs.io)
# reporting which lines of your plugin are covered by tests
source = ["sirocco"]

[tool.ruff]
include = ["src/*py", "tests/*py"]
target-version = "py310"

[tool.ruff.lint]
ignore = [
  "TID252", # prefer relative import over absolute
  "TRY003", # write custom error messages for formatting
]

## Hatch configurations
[tool.ruff.lint.per-file-ignores]

[tool.hatch.build.targets.sdist]
include = [
  "src/sirocco/",
]

[tool.hatch.version]
path = "src/sirocco/__init__.py"

[tool.hatch.envs.default]
installer = "uv"

[tool.hatch.envs.hatch-test]
installer = "uv"
extra-dependencies = [
    "ipdb"
]
default-args = []
extra-args = ["--doctest-modules", '-m not slow', '-m not requires_icon']

[[tool.hatch.envs.hatch-test.matrix]]
python = ["3.12"]

[tool.hatch.envs.docs]
installer = "uv"
description = "Build the documentation"
extra-dependencies = [
    "mkdocs-material",
]

[tool.hatch.envs.docs.scripts]
build = [
  "mkdocs build -f docs/mkdocs.yml",
  "echo 'Now open docs/build/index.html with your browser'"
]
serve = [
  "mkdocs serve -f docs/mkdocs.yml",
]

deploy = [
  "mkdocs gh-deploy --no-history -f docs/mkdocs.yml"
]

[tool.hatch.envs.types]
python = "3.12"
extra-dependencies = [
  "mypy>=1.0.0",
  "pytest",
  "lxml-stubs",
  "types-setuptools",
  "types-docutils",
  "types-colorama",
  "types-Pygments",
  "types-termcolor",
  "types-requests"
]

[tool.hatch.envs.types.scripts]
check = "mypy --no-incremental {args:.}"

[[tool.mypy.overrides]]
module = ["isoduration", "isoduration.*"]
follow_untyped_imports = true

[[tool.mypy.overrides]]
module = ["pygraphviz"]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = ["f90nml"]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = ["aiida_workgraph.sockets.builtins"]
ignore_missing_imports = true

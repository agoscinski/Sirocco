---
start_date: &root_start_date '2025-01-01T00:00'
stop_date: &root_stop_date '2027-01-01T00:00'
cycles:
  - init:
      tasks:
        - extpar:
            inputs:
              - obs_data:
                  port: obs
            outputs: [extpar_file]
  - icon_bimonthly:
      cycling:
        start_date: *root_start_date
        stop_date: *root_stop_date
        period: 'P2M'
      tasks:
        - preproc:
            inputs:
              - grid_file:
                  port: grid
              - extpar_file:
                  port: extpar
              - ERA5:
                  port: era
            outputs: [icon_input]
            wait_on:
              - icon:
                  when:
                    after: '2025-03-01T00:00'
                  target_cycle:
                    lag: '-P4M'
        - icon:
            inputs:
              - grid_file:
                  port: grid
              - icon_input:
                  port: lbc
              - icon_restart:
                  when:
                    after: *root_start_date
                  target_cycle:
                    lag: '-P2M'
                  port: restart_file
            outputs:
              - stream_1:
                  port: stream1
              - stream_2:
                  port: stream2
              - icon_restart:
                  port: latest_restart_file
        - postproc_1:
            inputs:
              - stream_1:
                  port: None
            outputs: [postout_1]
        - store_and_clean_1:
            inputs:
              - postout_1:
                  port: postout
              - stream_1:
                  port: streams
              - icon_input:
                  port: icon_input
            outputs: [stored_data_1]
  - yearly:
      cycling:
        start_date: *root_start_date
        stop_date: *root_stop_date
        period: 'P1Y'
      tasks:
        - postproc_2:
            inputs:
              - stream_2:
                  target_cycle:
                    lag: ['P0M', 'P2M', 'P4M', 'P6M', 'P8M', 'P10M']
                  port: streams
            outputs: [postout_2]
        - store_and_clean_2:
            inputs:
              - postout_2:
                  port: archive
              - stream_2:
                  target_cycle:
                    lag: ['P0M', 'P2M', 'P4M', 'P6M', 'P8M', 'P10M']
                  port: clean
            outputs:
              - stored_data_2
# Each task and piece of data (input and output of tasks) used to
# define the graph is described in that section
tasks:
  - ROOT:
      # All tasks inherit the root task properties
      computer: remote # TODO root task does not pass specs currently, see C2SM/Sirocco/issues/7
  - extpar:
      plugin: shell  # no extpar plugin available yet
      computer: remote
      src: scripts/extpar
      command: "extpar --verbose --input {PORT::obs}"
      resource:
        nodes: 1
        ntasks_per_node: 1
        cpus_per_task: 1
        mem: 1024
        walltime: 00:02:00
        uenv:
          squashfs: path/to/squashfs
          mount_point: runtime/mount/point
  - preproc:
      plugin: shell
      computer: remote
      src: scripts/cleanup.sh
      command: "bash cleanup.sh -p {PORT::extpar} -e {PORT::era} {PORT::grid}"
      env_source_files: data/dummy_source_file.sh
      resource:
        nodes: 4
        ntasks_per_node: 1
        cpus_per_task: 1
        mem: 1024
        walltime: 00:02:00
        uenv:
          squashfs: path/to/squashfs
          mount_point: runtime/mount/point
  - icon:
      plugin: icon
      computer: remote
      bin: /TESTS_ROOTDIR/tests/cases/large/config/ICON/bin/icon
      namelists:
        - ./ICON/icon_master.namelist:
            master_time_control_nml:
              checkpointtimeintval: 'P2M'
        - ./ICON/NAMELIST_exclaim_ape_R02B04:
            parallel_nml:
              nproma: 96
            output_nml[1]:
              output_filename: atm_2d
      resource:
        nodes: 40
        ntasks_per_node: 1
        cpus_per_task: 1
        mem: 1024
        walltime: 23:59:59
        uenv:
          squashfs: path/to/squashfs
          mount_point: runtime/mount/point
  - postproc_1:
      plugin: shell
      computer: remote
      src: scripts/main_script_ocn.sh
      command: "bash main_script_ocn.sh {PORT::None}"
      resource:
        nodes: 2
        ntasks_per_node: 1
        cpus_per_task: 1
        mem: 1024
        walltime: 00:05:00
        uenv:
          squashfs: path/to/squashfs
          mount_point: runtime/mount/point
  - postproc_2:
      plugin: shell
      computer: remote
      command: "bash main_script_atm.sh --input {PORT::streams}"
      multi_arg_sep: ","
      resource:
        nodes: 2
        ntasks_per_node: 1
        cpus_per_task: 1
        mem: 1024
        walltime: 00:05:00
        uenv:
          squashfs: path/to/squashfs
          mount_point: runtime/mount/point
  - store_and_clean_1:
      plugin: shell
      computer: remote
      src: scripts/post_clean.sh
      command: "bash post_clean.sh {PORT::postout} {PORT::streams} {PORT::icon_input}"
      resource:
        nodes: 1
        ntasks_per_node: 1
        cpus_per_task: 1
        mem: 1024
        walltime: 00:01:00
  - store_and_clean_2:
      plugin: shell
      computer: remote
      src: scripts/post_clean.sh
      command: "bash post_clean.sh --archive {PORT::archive} --clean {PORT::clean}"
      resource:
        nodes: 1
        ntasks_per_node: 1
        cpus_per_task: 1
        mem: 1024
        walltime: 00:01:00
data:
  available:
    - grid_file:
        computer: remote
        src: /TESTS_ROOTDIR/tests/cases/large/config/data/grid
    - obs_data:
        computer: remote
        src: /TESTS_ROOTDIR/tests/cases/large/config/data/obs_data
    - ERA5:
        computer: remote
        src: /TESTS_ROOTDIR/tests/cases/large/config/data/era5
  generated:
    - extpar_file:
        src: output
    - icon_input:
        src: output
    - icon_restart:
        format: ncdf
        src: restart
    - stream_1:
        src: output_1
    - stream_2:
        src: output_2
    - postout_1:
        src: postout
    - postout_2:
        src: postout
    - stored_data_1:
        src: stored_data
    - stored_data_2:
        src: stored_data
